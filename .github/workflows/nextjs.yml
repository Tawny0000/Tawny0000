# # Sample workflow for building and deploying a Next.js site to GitHub Pages
# #
# # To get started with Next.js see: https://nextjs.org/docs/getting-started
# #
# name: Deploy Next.js site to Pages

# on:
#   # Runs on pushes targeting the default branch
#   push:
#     branches: ["main"]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: write
#   pages: write
#   id-token: write

# # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
# concurrency:
#   group: "pages"
#   cancel-in-progress: false

# jobs:
#   # Build job
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3
#       - uses: pnpm/action-setup@v2
#         with:
#           version: 8
#           run_install: |
#               - args: [--frozen-lockfile]
#       - name: Setup Node
#         uses: actions/setup-node@v3
#         with:
#           node-version: "18"
#           cache: ${{ steps.detect-package-manager.outputs.manager }}
#       - name: Setup Pages
#         uses: actions/configure-pages@v3
#         with:
#           # Automatically inject basePath in your Next.js configuration file and disable
#           # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
#           #
#           # You may remove this line if you want to manage the configuration yourself.
#           static_site_generator: next
#       - name: Restore cache
#         uses: actions/cache@v3
#         with:
#           path: |
#             .next/cache
#           # Generate a new cache whenever packages or source files change.
#           key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
#           # If source files changed but packages didn't, rebuild from a prior cache.
#           restore-keys: |
#             ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
#       - name: Install dependencies
#         run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
#       - name: Build with Next.js
#         run: ${{ steps.detect-package-manager.outputs.runner }} pnpm build
#       # - name: Static HTML export with Next.js
#       #   run: ${{ steps.detect-package-manager.outputs.runner }} next export
#       - name: Upload artifact
#         uses: JamesIves/github-pages-deploy-action@v4.4.3
#         with:
#           branch: gh-pages
#           folder: ./

#   # Deployment job
#   # deploy:
#   #   environment:
#   #     name: github-pages
#   #     url: ${{ steps.deployment.outputs.page_url }}
#   #   runs-on: ubuntu-latest
#   #   needs: build
#   #   steps:
#   #     - name: Deploy to GitHub Pages
#   #       id: deployment
#   #       uses: actions/deploy-pages@v2

# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: GitHub Pages deploy

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: checkout and stuff
        uses: actions/checkout@v2.3.1
      - name: use node.js v18 ok
        uses: actions/setup-node@v1
        with:
          version: '18.x'
      - name: setup ur pnpm stuff
        uses: pnpm/action-setup@v2
        with:
          version: '8.x.x'

      - name: install ur packages
        run: pnpm install --frozen-lockfile

      - name: build my stupid app.
        run: pnpm build && touch ./out/.nojekyll

      - name: pls depoly
        # https://github.com/JamesIves/github-pages-deploy-action
        uses: JamesIves/github-pages-deploy-action@v4.4.3
        with:
          branch: gh-pages
          folder: out